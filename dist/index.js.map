{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\nvar sqrtf = require( '@stdlib/math-base-special-sqrtf' );\nvar PI = require( '@stdlib/constants-float32-pi' );\n\n\n// MAIN //\n\n/**\n* Computes the principal square root of the product of \uD835\uDED1 and a positive single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} result\n*\n* @example\n* var v = sqrtpif( 4.0 );\n* // returns ~3.5449\n*\n* v = sqrtpif( 10.0 );\n* // returns ~5.60499\n*\n* v = sqrtpif( 0.0 );\n* // returns 0.0\n*\n* v = sqrtpif( -4.0 );\n* // returns NaN\n*\n* v = sqrtpif( NaN );\n* // returns NaN\n*/\nfunction sqrtpif( x ) {\n\treturn sqrtf( float64ToFloat32( float64ToFloat32( x ) * PI ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = sqrtpif;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the principal square root of the product of \u03C0 and a positive single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-sqrtpif\n*\n* @example\n* var sqrtpif = require( '@stdlib/math-base-special-sqrtpif' );\n*\n* var v = sqrtpif( 4.0 );\n* // returns ~3.5449\n*\n* v = sqrtpif( 10.0 );\n* // returns ~5.60499\n*\n* v = sqrtpif( 0.0 );\n* // returns 0.0\n*\n* v = sqrtpif( -4.0 );\n* // returns NaN\n*\n* v = sqrtpif( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,wCAAyC,EACrEC,EAAQ,QAAS,iCAAkC,EACnDC,EAAK,QAAS,8BAA+B,EA2BjD,SAASC,EAASC,EAAI,CACrB,OAAOH,EAAOD,EAAkBA,EAAkBI,CAAE,EAAIF,CAAG,CAAE,CAC9D,CAKAH,EAAO,QAAUI,ICZjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "float64ToFloat32", "sqrtf", "PI", "sqrtpif", "x", "main"]
}
